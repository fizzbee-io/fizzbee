// Code generated by fizzbee-mbt generator; DO NOT EDIT.
// Source: {{ source_path }}

package {{ package_name }};

import io.fizzbee.mbt.runner.FizzBeeTestBase;
import io.fizzbee.mbt.types.Arg;
import org.junit.jupiter.api.BeforeAll;

import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.Map;

public abstract class {{ model_name | capitalize }}TestBase extends FizzBeeTestBase {

    @BeforeAll
    public static void setup() {
        try {
            // Top-level model actions (role key = "")
            Map<String, Method> modelActions = new HashMap<>();
            {% for action in file.actions %}
                {% if action.name != "Init" %}
            modelActions.put("{{ action.name }}", {{ model_name | capitalize }}Model.class.getMethod("action{{ action.name | capitalize }}", Arg[].class));
                {% endif %}
            {% endfor %}
            actions.put("", modelActions);

            // Role-specific actions
            {% for role in file.roles %}
            Map<String, Method> {{ role.name | lower }}Actions = new HashMap<>();
                {% for action in role.actions %}
                    {% if action.name != "Init" %}
            {{ role.name | lower }}Actions.put("{{ action.name }}", {{ role.name | capitalize }}Role.class.getMethod("action{{ action.name | capitalize }}", Arg[].class));
                    {% endif %}
                {% endfor %}
            actions.put("{{ role.name }}", {{ role.name | lower }}Actions);
            {% endfor %}

        } catch (NoSuchMethodException e) {
            throw new RuntimeException("Failed to register actions", e);
        }
    }

}
