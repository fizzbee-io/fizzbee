syntax = "proto3";

package fizzbee.mbt;

option go_package = "github.com/fizzbee-io/fizzbee/mbt/lib/go/internalpb";

// ------------------ Common Value Representation ------------------
message Value {
  oneof kind {
    string str_value = 1;
    int64 int_value = 2;
    bool bool_value = 3;
    MapValue map_value = 4;
    ListValue list_value = 5;
  }
}

message MapValue {
  repeated MapEntry entries = 1;
}

message MapEntry {
  Value key = 1;
  Value value = 2;
}

message ListValue {
  repeated Value items = 1;
}

message SetValue {
  repeated Value items = 1;
}

// ------------------ Role / Action Execution ------------------
message RoleRef {
  string role_name = 1; // e.g., "SlateDB", "ObjectStore"
  int32 role_id = 2;    // e.g., instance index
}

enum ArgType {
  ARG_TYPE_UNKNOWN = 0;
  ARG_TYPE_ANY = 1;
}

message Arg {
  ArgType type = 1;
  string name = 2;   // e.g., "key", "value"
  Value value = 3;
}

message Status {
  StatusCode code = 1;
  string message = 2; // human-readable message
}

enum StatusCode {
  STATUS_UNKNOWN = 0;
  STATUS_OK = 1;
  STATUS_NOT_IMPLEMENTED = 2;
  STATUS_INVALID_ROLE = 3;
  STATUS_INVALID_ACTION = 4;
  STATUS_EXECUTION_FAILED = 5;
}

// Interval for execution times
message Interval {
  int64 start_unix_nano = 1;
  int64 end_unix_nano = 2;
}

message RoleState {
  RoleRef role = 1;
  map<string, Value> state = 2; // Key-value pairs representing the role's state
}

message ExecOptions {
  bool capture_state = 1; // Whether to capture and return the state of all roles after action execution
}
// ------------------ RPC Messages ------------------
message InitRequest {
  string test_name = 1;
  repeated Arg args = 2;

  ExecOptions options = 3;
}

message InitResponse {
  Interval exec_time = 1;
  Status status = 2;

  repeated RoleRef roles = 3; // List of roles initialized by the plugin
  repeated RoleState role_states = 4; // Initial state of each role
}

message CleanupRequest {
}

message CleanupResponse {
  Interval exec_time = 1;
  Status status = 2;
}

message ExecuteActionRequest {
  RoleRef role = 1;
  string action_name = 2;
  repeated Arg args = 3;
  ExecOptions options = 4;
}

message ExecuteActionResponse {
  repeated Value return_values = 1;
  Interval exec_time = 2;
  Status status = 3;

  repeated RoleRef roles = 4; // List of roles initialized by the plugin
  repeated RoleState role_states = 5; // Initial state of each role
}

// ------------------ Service Definition ------------------
service FizzBeeMbtPluginService {
  rpc Init (InitRequest) returns (InitResponse);
  rpc Cleanup (CleanupRequest) returns (CleanupResponse);

  rpc ExecuteAction (ExecuteActionRequest) returns (ExecuteActionResponse);
}
